/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.util.HashSet;

public class App {

    public static void main(String[] args) {

        System.out.println(new App().analyzeWeatherData(weeklyMonthTemperatures));

    }

    // Maps
    // Daily average temperatures for Seattle, October 1-28 2017
    static int[][] weeklyMonthTemperatures = {
            {66, 64, 58, 65, 71, 57, 60},
            {57, 65, 65, 70, 72, 65, 51},
            {55, 54, 60, 53, 59, 57, 61},
            {65, 56, 55, 52, 55, 62, 57}
    };

    public String analyzeWeatherData(int[][] data) {

        //Use the October Seattle weather data above.
        // Iterate through all of the data to find the min and max values.
        int minTemp = 500;
        int maxTemp = 0;

        // Use a HashSet of type Integer to keep track of all the unique temperatures seen.
        HashSet<Integer> temps = new HashSet<>();

        for (int i=0; i < data.length; i++) {
            for (int j=0; j < data[i].length; j++) {

                temps.add(data[i][j]);

                if (data[i][j] > maxTemp) {
                    maxTemp = data[i][j];
                }
                if (data[i][j] < minTemp) {
                    minTemp = data[i][j];
                }
            }
        }

        //System.out.println("High: " + maxTemp);
        //System.out.println("Low: " + minTemp);

        String returnString = "High: " + maxTemp + "\n" + "Low: " + minTemp + "\n";

        // Finally, iterate from the min temp to the max temp and
        // create a String containing any temperature not seen during the month.
        for (int i=minTemp; i<=maxTemp; i++) {
            if (!temps.contains(i)) {
                //System.out.println("Never saw temperature: " + i);
                returnString += "Never saw temperature: " + i + "\n";
            }
        }

        // Return that String.
        return returnString;
    }

    // Tallying Election
    // Write a function called tally that accepts a List of Strings representing votes
    // and returns one string to show what got the most votes.
}
